// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240205131710_SecondMigration")]
    partial class SecondMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("WebAPI.Models.Inventory", b =>
                {
                    b.Property<int>("product_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("qty")
                        .HasColumnType("INTEGER");

                    b.Property<double>("shipping_cost")
                        .HasColumnType("REAL");

                    b.Property<string>("shipping_time")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("product_id", "SKU");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("WebAPI.Models.Price", b =>
                {
                    b.Property<int>("price_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<double>("net_price")
                        .HasColumnType("REAL");

                    b.Property<double>("net_price_after_discount")
                        .HasColumnType("REAL");

                    b.Property<double>("net_price_after_discount_for_logistic_unit")
                        .HasColumnType("REAL");

                    b.Property<short>("vat_rate")
                        .HasColumnType("INTEGER");

                    b.HasKey("price_id", "SKU");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SKU")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("EAN")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("default_image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("is_available")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("is_vendor")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("is_wire")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("producer_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "SKU");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebAPI.Models.Inventory", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "Product")
                        .WithMany("Inventories")
                        .HasForeignKey("product_id", "SKU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebAPI.Models.Price", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "Product")
                        .WithOne("Price")
                        .HasForeignKey("WebAPI.Models.Price", "price_id", "SKU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
